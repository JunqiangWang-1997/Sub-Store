name: Build and Push Docker Image

on:
  push:
    branches: [ master, main ]
    paths:
      - 'backend/**'
      - 'Dockerfile'
      - '.github/workflows/docker.yml'
  pull_request:
    branches: [ master, main ]
  workflow_dispatch: # 允许手动触发

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate deployment info
      run: |
        echo "## 🚀 Docker镜像构建完成!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📦 镜像信息" >> $GITHUB_STEP_SUMMARY
        echo "- **镜像名称**: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **标签**: \`latest\`" >> $GITHUB_STEP_SUMMARY
        echo "- **架构**: \`linux/amd64\`, \`linux/arm64\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🏃‍♂️ 使用方法" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "# 拉取镜像" >> $GITHUB_STEP_SUMMARY
        echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "# 运行容器" >> $GITHUB_STEP_SUMMARY
        echo "docker run -d \\" >> $GITHUB_STEP_SUMMARY
        echo "  --name sub-store \\" >> $GITHUB_STEP_SUMMARY
        echo "  -p 3000:3000 \\" >> $GITHUB_STEP_SUMMARY
        echo "  -v sub-store-data:/app/data \\" >> $GITHUB_STEP_SUMMARY
        echo "  -e SUB_STORE_BACKEND_API_PORT=3000 \\" >> $GITHUB_STEP_SUMMARY
        echo "  -e NODE_ENV=production \\" >> $GITHUB_STEP_SUMMARY
        echo "  --restart unless-stopped \\" >> $GITHUB_STEP_SUMMARY
        echo "  ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🌐 访问方式" >> $GITHUB_STEP_SUMMARY
        echo "- **后端API**: http://localhost:3000" >> $GITHUB_STEP_SUMMARY
        echo "- **前端界面**: https://sub-store.vercel.app?api=http://localhost:3000" >> $GITHUB_STEP_SUMMARY
